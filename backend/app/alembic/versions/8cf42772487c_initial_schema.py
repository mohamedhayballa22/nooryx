"""Initial schema

Revision ID: 8cf42772487c
Revises: 
Create Date: 2025-10-20 20:15:35.426194

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8cf42772487c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
from fastapi_users_db_sqlalchemy.generics import GUID


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orgs',
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('valuation_method', sa.String(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('org_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'org_id', name='uix_locations_org_id_name')
    )
    op.create_index(op.f('ix_locations_org_id'), 'locations', ['org_id'], unique=False)
    op.create_table('skus',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('code', 'org_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_id')
    )
    op.create_table('users',
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('id', GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'org_id', name='uq_user_id_org_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_org_id'), 'users', ['org_id'], unique=False)
    op.create_table('states',
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('sku_code', sa.String(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('on_hand', sa.Integer(), nullable=False),
    sa.Column('reserved', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('reserved >= 0', name='ck_state_reserved_nonnegative'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sku_code', 'org_id'], ['skus.code', 'skus.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('org_id', 'sku_code', 'location_id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('sku_code', sa.String(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('qty_before', sa.Integer(), nullable=False),
    sa.Column('cost_price', sa.BigInteger(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('txn_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sku_code', 'org_id'], ['skus.code', 'skus.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'org_id', name='uq_transactions_id_org_id')
    )
    op.create_index('ix_transactions_location_id', 'transactions', ['location_id'], unique=False)
    op.create_index('ix_transactions_org_created', 'transactions', ['org_id', 'created_at'], unique=False)
    op.create_index('ix_transactions_org_id', 'transactions', ['org_id'], unique=False)
    op.create_index('ix_transactions_org_sku_loc', 'transactions', ['org_id', 'sku_code', 'location_id'], unique=False)
    op.create_index('ix_transactions_sku_code', 'transactions', ['sku_code'], unique=False)
    op.create_table('cost_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('sku_code', sa.String(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=True),
    sa.Column('qty_in', sa.Integer(), nullable=False),
    sa.Column('qty_remaining', sa.Integer(), nullable=False),
    sa.Column('cost_price', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.org_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sku_code', 'org_id'], ['skus.code', 'skus.org_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id', 'org_id'], ['transactions.id', 'transactions.org_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku_code', 'transaction_id', 'org_id', name='uix_cost_records_org_sku_txn')
    )
    op.create_index('ix_cost_records_fifo_query', 'cost_records', ['org_id', 'sku_code', 'location_id', 'qty_remaining', 'created_at'], unique=False)
    op.create_index('ix_cost_records_org_created', 'cost_records', ['org_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_cost_records_org_id'), 'cost_records', ['org_id'], unique=False)
    op.create_index('ix_cost_records_org_sku_loc', 'cost_records', ['org_id', 'sku_code', 'location_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_cost_records_org_sku_loc', table_name='cost_records')
    op.drop_index(op.f('ix_cost_records_org_id'), table_name='cost_records')
    op.drop_index('ix_cost_records_org_created', table_name='cost_records')
    op.drop_index('ix_cost_records_fifo_query', table_name='cost_records')
    op.drop_table('cost_records')
    op.drop_index('ix_transactions_sku_code', table_name='transactions')
    op.drop_index('ix_transactions_org_sku_loc', table_name='transactions')
    op.drop_index('ix_transactions_org_id', table_name='transactions')
    op.drop_index('ix_transactions_org_created', table_name='transactions')
    op.drop_index('ix_transactions_location_id', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('states')
    op.drop_index(op.f('ix_users_org_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('subscriptions')
    op.drop_table('skus')
    op.drop_index(op.f('ix_locations_org_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_table('orgs')
    # ### end Alembic commands ###
